
@page "/Agentes"
@using System.Net
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Web
@using System.IO
@using System.Text
@using System.Net.Http.Headers
@using WebConAPI.Client
@inject TokenAdmin tokenAdmin
@inject HttpClient _client
@inject NavigationManager NavManager

<head>
    <link href="css/TallerBAS.css" rel="stylesheet" />
</head>

<body>
    <h1>Agentes</h1>

    @if (_agentes == null)
    {
        <p><em>Loading...</em></p>        
    }
    else
    {
        <table class="table table-striped table-responsive">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Nombre</th>
                    <th>
                        <a href="AgenteDetalles/XXX/C" class="oi oi-plus"></a>
                    </th>
                </tr>
            </thead>

            <tbody>                                
                @for (var i=0;i<_agentes.Agentes.Count; i++)
                {
                    var _indice = i;
                    <tr>
                        <td>@_agentes.Agentes[_indice].Codigo</td>
                        <td>@_agentes.Agentes[_indice].Nombre</td>
                        <td>
                            <a href="AgenteDetalles/@_agentes.Agentes[_indice].Codigo/R" class="oi oi-magnifying-glass"></a>                           
                        </td>
                        <td>
                            <a href="AgenteDetalles/@_agentes.Agentes[_indice].Codigo/U" class="oi oi-pencil"></a>                           
                        </td>
                        <td>    
                           <button class="bas-btn" @onclick="()=>DeleteConfirm(_indice)">
                                <i class="oi oi-trash bas-link-icon"></i>
                            </button>
                  
                        </td>
                    </tr>
                    
                }                
            </tbody>

        </table>
    }

        @if (deleteDialogOpen)
    {
        <ModalDialog 
            DialogType="@ModalDialog.ModalDialogType.DeleteCancel"
            Title="¿Estás seguro que lo querés borrar?" 
            BodyText="@modalBodyText" 
            ErrorText="@modalErrorText" 
            OnClose="@DeleteDo"/>
    }    

   
</body>

@code 
{
    private Apis.AgentesWA? _agentes;
    int _indice=0;
    string? _token; 
    private bool deleteDialogOpen;
    private string modalBodyText;
    private string modalErrorText;
    private int indiceABorrar;


    protected override async Task OnInitializedAsync()
    {
        _agentes = await Apis.GetAgentes();    
    }

   
    private void DeleteConfirm(int paramIndice)
    {
        modalBodyText = $"<strong>{_agentes.Agentes[paramIndice].Codigo}:</strong> {_agentes.Agentes[paramIndice].Nombre}";
        modalErrorText = "";
        indiceABorrar = paramIndice;
        deleteDialogOpen = true;
    }

    private async void DeleteDo(bool confirm)
    {
        if (confirm)
        {
            string agSerializado=JsonSerializer.Serialize(new {Codigo=_agentes.Agentes[indiceABorrar].Codigo}); 

            _token = await TokenAdmin.Get(); 
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", _token);  

            var request = new HttpRequestMessage {
                Method = HttpMethod.Delete,
                RequestUri = new Uri("https://intranet.bas.com.ar/bascsapiv02/api/agente/1/1"),
                Content = new StringContent(agSerializado, System.Text.Encoding.UTF8, "application/json")
            };
            var response = await _client.SendAsync(request);

             if (response.IsSuccessStatusCode)            
            {                               
                _agentes.Agentes.RemoveAt(indiceABorrar); //  borrarlo de la lista
                deleteDialogOpen = false;
            }
            else
            {
                //modalErrorText = ($"No se pudo borrar {response.StatusCode}");

                //var _response = await response.Content.ReadFromJsonAsync<ProblemDetails>();
                //modalErrorText = _response.Title;
            }     

        }
        else deleteDialogOpen = false;
        StateHasChanged();
    }



}

